@model Aula04Out24.Models.Colaboradores

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Cadastro de Colaboradores</title>
    <link rel="stylesheet"
          href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css"
          integrity="sha512-Kc323vGBEqzTmouAECnVceyQqyqdsSiqLQISBL29aUW4U/M7pSPA/gEUZQqv1cwx4OnYxTxve5UMg5GT6L4JJg=="
          crossorigin="anonymous"
          referrerpolicy="no-referrer" />
    <link rel="icon" href="~/IMG/Index/Logo M Mania 1.png" />
    <link rel="stylesheet" href="~/Content/CadastroColaborador.css" />
    <!-- Toastr CSS -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css" />

    <!-- Toastr JS -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>
    <script>
    $(document).ready(function () {
        // mensagem toastr
        @if (ViewBag.ToastrMessage != null)
        {
            <text>
                toastr["@ViewBag.ToastrType"]("@ViewBag.ToastrMessage");
            </text>
        }

        // formatação do CPF
        $('.input__cpf').on('input', function () {
            let value = $(this).val().replace(/\D/g, ''); // essa função irá remover tudo que não é numérico. 
            if (value.length <= 11) {
                value = value.replace(/(\d{3})(\d)/, '$1.$2');
                value = value.replace(/(\d{3})(\d)/, '$1.$2');
                value = value.replace(/(\d{3})(\d{1,2})$/, '$1-$2');
            }
            $(this).val(value); // atualiza o campo
        });

        // formatação do horário
        $('#horario').on('input', function () {
            let value = $(this).val().replace(/\D/g, ''); // essa função irá remover tudo que não é numérico. 
            if (value.length <= 4) { // formatar apenas se a quantidade de caracteres for até 4 (HH:mm)
                value = value.replace(/(\d{2})(\d)/, '$1:$2'); // adiciona o separador ":"
            }
            $(this).val(value); // atualiza o campo
        });
    });
    </script>
</head>

<body>
    <div class="bg"></div>
    <header>
        <a href="index.html" target="_blank">
            <img class="logo" src="~/IMG/Index/Logo M Mania 1.png" />
        </a>
    </header>

    <main>
        <div class="main__container">
            <div class="main__conteudo">
                <div class="conteudo__wrapper">
                    <div class="main__h1">
                        <button class="button__voltar">
                            <a href=@Url.Action("ControleRH")>
                                <i class="fa-solid fa-arrow-left"></i>
                            </a>
                        </button>
                        <h1><span class="underline">Cadas</span>tro de Colaborador</h1>
                    </div>

                    @using (Html.BeginForm("CadastroColaboradores", "Home", FormMethod.Post, new { @class = "input__box" })) {
                        <div class="input__wrapper">
                            <div class="wrapper">
                                <label for="nome" class="input__label">Nome *</label>
                                @Html.TextBoxFor(m => m.Nome, new { @class = "input", @id = "nome", @placeholder = "Insira o nome", @required = "required" })
                                @Html.ValidationMessageFor(m => m.Nome, "", new { @class = "text-danger" })
                            </div>

                            <div class="wrapper wrapper-cpf">
                                <label for="cpf" class="input__label">CPF *</label>
                                @Html.TextBoxFor(m => m.CPF, new { @class = "input input__cpf", @id = "cpf", @placeholder = "Ex. 123.456.789-00", @required = "required", @maxlength = "14", @autocomplete = "off" })
                                @Html.ValidationMessageFor(m => m.CPF, "", new { @class = "text-danger" })
                            </div>

                            <div class="wrapper wrapper-cargo">
                                <label for="cargo" class="input__label">Cargo *</label>
                                @Html.TextBoxFor(m => m.Cargo, new { @class = "input", @id = "cargo", @placeholder = "Insira o cargo" })
                                @Html.ValidationMessageFor(m => m.Cargo, "", new { @class = "text-danger" })
                            </div>

                            <div class="wrapper wrapper-horario">
                                <label for="horario" class="input__label">Horário de trabalho *</label>
                                @Html.TextBoxFor(m => m.Horario,
                                    new {
                                        @class = "input",
                                        @id = "horario",
                                        @placeholder = "Ex. 08:30",
                                        @required = "required",
                                        @maxlength = "5",
                                        @autocomplete = "off"
                                    })
                                @Html.ValidationMessageFor(m => m.Horario, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="container__button">
                            <button type="submit" class="main__button button__enviar">
                                Cadastrar
                            </button>
                            <button type="reset" class="main__button button__limpar">
                                Limpar dados
                            </button>
                        </div>
                    }
                </div>
                <div class="main__icone">
                    <div class="iconin">
                        <img class="icone" src="~/Icon/man.png" alt="icone" />
                    </div>
                </div>
            </div>
        </div>
    </main>
</body>
</html>
